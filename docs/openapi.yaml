openapi: 3.0.4
info:
  title: Translation Service API
  version: 1.0.0
  description: API for managing translations in a translation management service.
servers:
  - url: http://translation-management-service.test
    description: Local development server
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Authentication
    description: Endpoints for user authentication
  - name: Locales
    description: Endpoints for managing locales
  - name: Translations
    description: Endpoints for managing translations
paths:
  # Authentication Endpoints
  /api/v1/auth/register:
    post:
      tags: [Authentication]
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
      responses:
        '200': { description: OK }
  /api/v1/auth/login:
    post:
      tags: [Authentication]
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200': { description: OK }
  /api/v1/auth/logout:
    post:
      tags: [Authentication]
      summary: Logout user
      responses:
        '200': { description: OK }

  # Locale Endpoints
  /api/v1/locales:
    get:
      tags: [Locales]
      summary: List and search locales
      parameters:
        - in: query
          name: search
          schema: { type: string }
        - in: query
          name: page
          schema: { type: integer, default: 1 }
        - in: query
          name: per_page
          schema: { type: integer, default: 15 }
      responses:
        '200': { description: OK }
    post:
      tags: [Locales]
      summary: Create or upsert locale
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                name:
                  type: string
      responses:
        '201': { description: Created }
  /api/v1/locales/{id}:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
    get:
      tags: [Locales]
      summary: Show locale
      responses:
        '200': { description: OK }
    put:
      tags: [Locales]
      summary: Update locale
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                name:
                  type: string
      responses:
        '200': { description: OK }
    delete:
      tags: [Locales]
      summary: Delete locale
      responses:
        '200': { description: OK }
  
  # Translation Endpoints
  /api/v1/translations:
    get:
      tags: [Translations]
      summary: List and search translations
      parameters:
        - in: query
          name: locale
          schema: { type: string }
        - in: query
          name: tag
          schema: { type: string }
        - in: query
          name: namespace
          schema: { type: string }
        - in: query
          name: search
          schema: { type: string }
        - in: query
          name: page
          schema: { type: integer, default: 1 }
        - in: query
          name: per_page
          schema: { type: integer, default: 15 }
      responses:
        '200': { description: OK }
    post:
      tags: [Translations]
      summary: Create or upsert translation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  uniqueItems: true
                value:
                  type: string
                locale:
                  type: string
                  description: Must be a valid existing locale code
                namespace:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                    description: Must be a valid existing tag code
      responses:
        '201': { description: Created }
  /api/v1/translations/{id}:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
    get:
      tags: [Translations]
      summary: Show translation
      responses:
        '200': { description: OK }
    put:
      tags: [Translations]
      summary: Update translation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                    description: Must be a valid existing tag code
      responses:
        '200': { description: OK }
    delete:
      tags: [Translations]
      summary: Delete translation
      responses:
        '200': { description: OK }
